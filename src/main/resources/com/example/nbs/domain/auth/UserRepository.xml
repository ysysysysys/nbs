<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.nbs.domain.auth.UserRepository">

    <!--    SELECT-->
    <select id="findAll" resultMap="List_UserEntity_RM">
        select
            *
        from
            nbs.user
    </select>
    <resultMap id="List_UserEntity_RM" type="com.example.nbs.domain.auth.UserEntity">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="authority" property="authority" jdbcType="VARCHAR"/>
        <result column="fullname" property="fullname" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="created_datetime" property="created_datetime" jdbcType="TIMESTAMP"/>
        <result column="updated_datetime" property="updated_datetime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="findByUserId" resultMap="UserEntity_RM">
        select
            *
        from
            nbs.user
        where
            id = #{id}
    </select>
    <resultMap id="UserEntity_RM" type="com.example.nbs.domain.auth.UserEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="authority" property="authority" jdbcType="VARCHAR"/>
        <result column="fullname" property="fullname" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="created_datetime" property="created_datetime" jdbcType="TIMESTAMP"/>
        <result column="updated_datetime" property="updated_datetime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="findByUsername" resultMap="Optional_UserEntity_RM">
        select
        *
        from
        nbs.user
        where
        username = #{username}
    </select>
    <resultMap id="Optional_UserEntity_RM" type="com.example.nbs.domain.auth.UserEntity">
        <id column="username" property="username" jdbcType="VARCHAR"/>
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="authority" property="authority" jdbcType="VARCHAR"/>
        <result column="fullname" property="fullname" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="created_datetime" property="created_datetime" jdbcType="TIMESTAMP"/>
        <result column="updated_datetime" property="updated_datetime" jdbcType="TIMESTAMP"/>
    </resultMap>


    <!--    INSERT-->
    <insert id="insert">
        insert into nbs.user (username,password,authority,fullname,address,created_datetime,updated_datetime) value (#{username}, #{password},#{authority},#{fullname},#{address},#{dt},#{dt})
    </insert>


    <!--    UPDATE-->
    <update id="updateAuthority">
        update nbs.user set authority = #{authority}, updated_datetime = #{dt} where id = #{id}
    </update>

    <update id="updateBasicInfo">
        update nbs.user set fullname = #{fullname}, address = #{address}, updated_datetime = #{dt} where id = #{id}
    </update>

    <update id="updateUsername">
        update nbs.user set username = #{username}, updated_datetime = #{dt} where id = #{id}
    </update>

    <update id="updatePassword">
        update nbs.user set password = #{password}, updated_datetime = #{dt} where id = #{id}
    </update>


    <!--    DELETE-->
    <delete id="delete">
        delete
        from nbs.user
        where
        id = #{id}
    </delete>
</mapper>